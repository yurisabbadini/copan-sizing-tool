{"version":3,"file":"js/931.057dcc89.js","mappings":"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","sources":["webpack://copan-sizing-tool/./node_modules/quasar/src/components/input/use-mask.js","webpack://copan-sizing-tool/./node_modules/quasar/src/composables/private/use-file-dom-props.js","webpack://copan-sizing-tool/./node_modules/quasar/src/components/input/QInput.js"],"sourcesContent":["import { ref, watch, nextTick } from 'vue'\n\nimport { shouldIgnoreKey } from '../../utils/private/key-composition.js'\n\n// leave NAMED_MASKS at top of file (code referenced from docs)\nconst NAMED_MASKS = {\n  date: '####/##/##',\n  datetime: '####/##/## ##:##',\n  time: '##:##',\n  fulltime: '##:##:##',\n  phone: '(###) ### - ####',\n  card: '#### #### #### ####'\n}\n\nconst TOKENS = {\n  '#': { pattern: '[\\\\d]', negate: '[^\\\\d]' },\n\n  S: { pattern: '[a-zA-Z]', negate: '[^a-zA-Z]' },\n  N: { pattern: '[0-9a-zA-Z]', negate: '[^0-9a-zA-Z]' },\n\n  A: { pattern: '[a-zA-Z]', negate: '[^a-zA-Z]', transform: v => v.toLocaleUpperCase() },\n  a: { pattern: '[a-zA-Z]', negate: '[^a-zA-Z]', transform: v => v.toLocaleLowerCase() },\n\n  X: { pattern: '[0-9a-zA-Z]', negate: '[^0-9a-zA-Z]', transform: v => v.toLocaleUpperCase() },\n  x: { pattern: '[0-9a-zA-Z]', negate: '[^0-9a-zA-Z]', transform: v => v.toLocaleLowerCase() }\n}\n\nconst KEYS = Object.keys(TOKENS)\nKEYS.forEach(key => {\n  TOKENS[ key ].regex = new RegExp(TOKENS[ key ].pattern)\n})\n\nconst\n  tokenRegexMask = new RegExp('\\\\\\\\([^.*+?^${}()|([\\\\]])|([.*+?^${}()|[\\\\]])|([' + KEYS.join('') + '])|(.)', 'g'),\n  escRegex = /[.*+?^${}()|[\\]\\\\]/g\n\nconst MARKER = String.fromCharCode(1)\n\nexport const useMaskProps = {\n  mask: String,\n  reverseFillMask: Boolean,\n  fillMask: [ Boolean, String ],\n  unmaskedValue: Boolean\n}\n\nexport default function (props, emit, emitValue, inputRef) {\n  let maskMarked, maskReplaced, computedMask, computedUnmask\n\n  const hasMask = ref(null)\n  const innerValue = ref(getInitialMaskedValue())\n\n  function getIsTypeText () {\n    return props.autogrow === true\n      || [ 'textarea', 'text', 'search', 'url', 'tel', 'password' ].includes(props.type)\n  }\n\n  watch(() => props.type + props.autogrow, updateMaskInternals)\n\n  watch(() => props.mask, v => {\n    if (v !== void 0) {\n      updateMaskValue(innerValue.value, true)\n    }\n    else {\n      const val = unmaskValue(innerValue.value)\n      updateMaskInternals()\n      props.modelValue !== val && emit('update:modelValue', val)\n    }\n  })\n\n  watch(() => props.fillMask + props.reverseFillMask, () => {\n    hasMask.value === true && updateMaskValue(innerValue.value, true)\n  })\n\n  watch(() => props.unmaskedValue, () => {\n    hasMask.value === true && updateMaskValue(innerValue.value)\n  })\n\n  function getInitialMaskedValue () {\n    updateMaskInternals()\n\n    if (hasMask.value === true) {\n      const masked = maskValue(unmaskValue(props.modelValue))\n\n      return props.fillMask !== false\n        ? fillWithMask(masked)\n        : masked\n    }\n\n    return props.modelValue\n  }\n\n  function getPaddedMaskMarked (size) {\n    if (size < maskMarked.length) {\n      return maskMarked.slice(-size)\n    }\n\n    let pad = '', localMaskMarked = maskMarked\n    const padPos = localMaskMarked.indexOf(MARKER)\n\n    if (padPos > -1) {\n      for (let i = size - localMaskMarked.length; i > 0; i--) {\n        pad += MARKER\n      }\n\n      localMaskMarked = localMaskMarked.slice(0, padPos) + pad + localMaskMarked.slice(padPos)\n    }\n\n    return localMaskMarked\n  }\n\n  function updateMaskInternals () {\n    hasMask.value = props.mask !== void 0\n      && props.mask.length > 0\n      && getIsTypeText()\n\n    if (hasMask.value === false) {\n      computedUnmask = void 0\n      maskMarked = ''\n      maskReplaced = ''\n      return\n    }\n\n    const\n      localComputedMask = NAMED_MASKS[ props.mask ] === void 0\n        ? props.mask\n        : NAMED_MASKS[ props.mask ],\n      fillChar = typeof props.fillMask === 'string' && props.fillMask.length > 0\n        ? props.fillMask.slice(0, 1)\n        : '_',\n      fillCharEscaped = fillChar.replace(escRegex, '\\\\$&'),\n      unmask = [],\n      extract = [],\n      mask = []\n\n    let\n      firstMatch = props.reverseFillMask === true,\n      unmaskChar = '',\n      negateChar = ''\n\n    localComputedMask.replace(tokenRegexMask, (_, char1, esc, token, char2) => {\n      if (token !== void 0) {\n        const c = TOKENS[ token ]\n        mask.push(c)\n        negateChar = c.negate\n        if (firstMatch === true) {\n          extract.push('(?:' + negateChar + '+)?(' + c.pattern + '+)?(?:' + negateChar + '+)?(' + c.pattern + '+)?')\n          firstMatch = false\n        }\n        extract.push('(?:' + negateChar + '+)?(' + c.pattern + ')?')\n      }\n      else if (esc !== void 0) {\n        unmaskChar = '\\\\' + (esc === '\\\\' ? '' : esc)\n        mask.push(esc)\n        unmask.push('([^' + unmaskChar + ']+)?' + unmaskChar + '?')\n      }\n      else {\n        const c = char1 !== void 0 ? char1 : char2\n        unmaskChar = c === '\\\\' ? '\\\\\\\\\\\\\\\\' : c.replace(escRegex, '\\\\\\\\$&')\n        mask.push(c)\n        unmask.push('([^' + unmaskChar + ']+)?' + unmaskChar + '?')\n      }\n    })\n\n    const\n      unmaskMatcher = new RegExp(\n        '^'\n        + unmask.join('')\n        + '(' + (unmaskChar === '' ? '.' : '[^' + unmaskChar + ']') + '+)?'\n        + '$'\n      ),\n      extractLast = extract.length - 1,\n      extractMatcher = extract.map((re, index) => {\n        if (index === 0 && props.reverseFillMask === true) {\n          return new RegExp('^' + fillCharEscaped + '*' + re)\n        }\n        else if (index === extractLast) {\n          return new RegExp(\n            '^' + re\n            + '(' + (negateChar === '' ? '.' : negateChar) + '+)?'\n            + (props.reverseFillMask === true ? '$' : fillCharEscaped + '*')\n          )\n        }\n\n        return new RegExp('^' + re)\n      })\n\n    computedMask = mask\n    computedUnmask = val => {\n      const unmaskMatch = unmaskMatcher.exec(val)\n      if (unmaskMatch !== null) {\n        val = unmaskMatch.slice(1).join('')\n      }\n\n      const\n        extractMatch = [],\n        extractMatcherLength = extractMatcher.length\n\n      for (let i = 0, str = val; i < extractMatcherLength; i++) {\n        const m = extractMatcher[ i ].exec(str)\n\n        if (m === null) {\n          break\n        }\n\n        str = str.slice(m.shift().length)\n        extractMatch.push(...m)\n      }\n      if (extractMatch.length > 0) {\n        return extractMatch.join('')\n      }\n\n      return val\n    }\n    maskMarked = mask.map(v => (typeof v === 'string' ? v : MARKER)).join('')\n    maskReplaced = maskMarked.split(MARKER).join(fillChar)\n  }\n\n  function updateMaskValue (rawVal, updateMaskInternalsFlag, inputType) {\n    const\n      inp = inputRef.value,\n      end = inp.selectionEnd,\n      endReverse = inp.value.length - end,\n      unmasked = unmaskValue(rawVal)\n\n    // Update here so unmask uses the original fillChar\n    updateMaskInternalsFlag === true && updateMaskInternals()\n\n    const\n      preMasked = maskValue(unmasked),\n      masked = props.fillMask !== false\n        ? fillWithMask(preMasked)\n        : preMasked,\n      changed = innerValue.value !== masked\n\n    // We want to avoid \"flickering\" so we set value immediately\n    inp.value !== masked && (inp.value = masked)\n\n    changed === true && (innerValue.value = masked)\n\n    document.activeElement === inp && nextTick(() => {\n      if (masked === maskReplaced) {\n        const cursor = props.reverseFillMask === true ? maskReplaced.length : 0\n        inp.setSelectionRange(cursor, cursor, 'forward')\n\n        return\n      }\n\n      if (inputType === 'insertFromPaste' && props.reverseFillMask !== true) {\n        const cursor = end - 1\n        moveCursor.right(inp, cursor, cursor)\n\n        return\n      }\n\n      if ([ 'deleteContentBackward', 'deleteContentForward' ].indexOf(inputType) > -1) {\n        const cursor = props.reverseFillMask === true\n          ? (\n              end === 0\n                ? (masked.length > preMasked.length ? 1 : 0)\n                : Math.max(0, masked.length - (masked === maskReplaced ? 0 : Math.min(preMasked.length, endReverse) + 1)) + 1\n            )\n          : end\n\n        inp.setSelectionRange(cursor, cursor, 'forward')\n        return\n      }\n\n      if (props.reverseFillMask === true) {\n        if (changed === true) {\n          const cursor = Math.max(0, masked.length - (masked === maskReplaced ? 0 : Math.min(preMasked.length, endReverse + 1)))\n\n          if (cursor === 1 && end === 1) {\n            inp.setSelectionRange(cursor, cursor, 'forward')\n          }\n          else {\n            moveCursor.rightReverse(inp, cursor, cursor)\n          }\n        }\n        else {\n          const cursor = masked.length - endReverse\n          inp.setSelectionRange(cursor, cursor, 'backward')\n        }\n      }\n      else {\n        if (changed === true) {\n          const cursor = Math.max(0, maskMarked.indexOf(MARKER), Math.min(preMasked.length, end) - 1)\n          moveCursor.right(inp, cursor, cursor)\n        }\n        else {\n          const cursor = end - 1\n          moveCursor.right(inp, cursor, cursor)\n        }\n      }\n    })\n\n    const val = props.unmaskedValue === true\n      ? unmaskValue(masked)\n      : masked\n\n    String(props.modelValue) !== val && emitValue(val, true)\n  }\n\n  function moveCursorForPaste (inp, start, end) {\n    const preMasked = maskValue(unmaskValue(inp.value))\n\n    start = Math.max(0, maskMarked.indexOf(MARKER), Math.min(preMasked.length, start))\n\n    inp.setSelectionRange(start, end, 'forward')\n  }\n\n  const moveCursor = {\n    left (inp, start, end, selection) {\n      const noMarkBefore = maskMarked.slice(start - 1).indexOf(MARKER) === -1\n      let i = Math.max(0, start - 1)\n\n      for (; i >= 0; i--) {\n        if (maskMarked[ i ] === MARKER) {\n          start = i\n          noMarkBefore === true && start++\n          break\n        }\n      }\n\n      if (\n        i < 0\n        && maskMarked[ start ] !== void 0\n        && maskMarked[ start ] !== MARKER\n      ) {\n        return moveCursor.right(inp, 0, 0)\n      }\n\n      start >= 0 && inp.setSelectionRange(\n        start,\n        selection === true ? end : start, 'backward'\n      )\n    },\n\n    right (inp, start, end, selection) {\n      const limit = inp.value.length\n      let i = Math.min(limit, end + 1)\n\n      for (; i <= limit; i++) {\n        if (maskMarked[ i ] === MARKER) {\n          end = i\n          break\n        }\n        else if (maskMarked[ i - 1 ] === MARKER) {\n          end = i\n        }\n      }\n\n      if (\n        i > limit\n        && maskMarked[ end - 1 ] !== void 0\n        && maskMarked[ end - 1 ] !== MARKER\n      ) {\n        return moveCursor.left(inp, limit, limit)\n      }\n\n      inp.setSelectionRange(selection ? start : end, end, 'forward')\n    },\n\n    leftReverse (inp, start, end, selection) {\n      const\n        localMaskMarked = getPaddedMaskMarked(inp.value.length)\n      let i = Math.max(0, start - 1)\n\n      for (; i >= 0; i--) {\n        if (localMaskMarked[ i - 1 ] === MARKER) {\n          start = i\n          break\n        }\n        else if (localMaskMarked[ i ] === MARKER) {\n          start = i\n          if (i === 0) {\n            break\n          }\n        }\n      }\n\n      if (\n        i < 0\n        && localMaskMarked[ start ] !== void 0\n        && localMaskMarked[ start ] !== MARKER\n      ) {\n        return moveCursor.rightReverse(inp, 0, 0)\n      }\n\n      start >= 0 && inp.setSelectionRange(\n        start,\n        selection === true ? end : start, 'backward'\n      )\n    },\n\n    rightReverse (inp, start, end, selection) {\n      const\n        limit = inp.value.length,\n        localMaskMarked = getPaddedMaskMarked(limit),\n        noMarkBefore = localMaskMarked.slice(0, end + 1).indexOf(MARKER) === -1\n      let i = Math.min(limit, end + 1)\n\n      for (; i <= limit; i++) {\n        if (localMaskMarked[ i - 1 ] === MARKER) {\n          end = i\n          end > 0 && noMarkBefore === true && end--\n          break\n        }\n      }\n\n      if (\n        i > limit\n        && localMaskMarked[ end - 1 ] !== void 0\n        && localMaskMarked[ end - 1 ] !== MARKER\n      ) {\n        return moveCursor.leftReverse(inp, limit, limit)\n      }\n\n      inp.setSelectionRange(selection === true ? start : end, end, 'forward')\n    }\n  }\n\n  function onMaskedKeydown (e) {\n    if (shouldIgnoreKey(e) === true) {\n      return\n    }\n\n    const\n      inp = inputRef.value,\n      start = inp.selectionStart,\n      end = inp.selectionEnd\n\n    if (e.keyCode === 37 || e.keyCode === 39) { // Left / Right\n      const fn = moveCursor[ (e.keyCode === 39 ? 'right' : 'left') + (props.reverseFillMask === true ? 'Reverse' : '') ]\n\n      e.preventDefault()\n      fn(inp, start, end, e.shiftKey)\n    }\n    else if (\n      e.keyCode === 8 // Backspace\n      && props.reverseFillMask !== true\n      && start === end\n    ) {\n      moveCursor.left(inp, start, end, true)\n    }\n    else if (\n      e.keyCode === 46 // Delete\n      && props.reverseFillMask === true\n      && start === end\n    ) {\n      moveCursor.rightReverse(inp, start, end, true)\n    }\n  }\n\n  function maskValue (val) {\n    if (val === void 0 || val === null || val === '') { return '' }\n\n    if (props.reverseFillMask === true) {\n      return maskValueReverse(val)\n    }\n\n    const mask = computedMask\n\n    let valIndex = 0, output = ''\n\n    for (let maskIndex = 0; maskIndex < mask.length; maskIndex++) {\n      const\n        valChar = val[ valIndex ],\n        maskDef = mask[ maskIndex ]\n\n      if (typeof maskDef === 'string') {\n        output += maskDef\n        valChar === maskDef && valIndex++\n      }\n      else if (valChar !== void 0 && maskDef.regex.test(valChar)) {\n        output += maskDef.transform !== void 0\n          ? maskDef.transform(valChar)\n          : valChar\n        valIndex++\n      }\n      else {\n        return output\n      }\n    }\n\n    return output\n  }\n\n  function maskValueReverse (val) {\n    const\n      mask = computedMask,\n      firstTokenIndex = maskMarked.indexOf(MARKER)\n\n    let valIndex = val.length - 1, output = ''\n\n    for (let maskIndex = mask.length - 1; maskIndex >= 0 && valIndex > -1; maskIndex--) {\n      const maskDef = mask[ maskIndex ]\n\n      let valChar = val[ valIndex ]\n\n      if (typeof maskDef === 'string') {\n        output = maskDef + output\n        valChar === maskDef && valIndex--\n      }\n      else if (valChar !== void 0 && maskDef.regex.test(valChar)) {\n        do {\n          output = (maskDef.transform !== void 0 ? maskDef.transform(valChar) : valChar) + output\n          valIndex--\n          valChar = val[ valIndex ]\n        // eslint-disable-next-line no-unmodified-loop-condition\n        } while (firstTokenIndex === maskIndex && valChar !== void 0 && maskDef.regex.test(valChar))\n      }\n      else {\n        return output\n      }\n    }\n\n    return output\n  }\n\n  function unmaskValue (val) {\n    return typeof val !== 'string' || computedUnmask === void 0\n      ? (typeof val === 'number' ? computedUnmask('' + val) : val)\n      : computedUnmask(val)\n  }\n\n  function fillWithMask (val) {\n    if (maskReplaced.length - val.length <= 0) {\n      return val\n    }\n\n    return props.reverseFillMask === true && val.length > 0\n      ? maskReplaced.slice(0, -val.length) + val\n      : val + maskReplaced.slice(val.length)\n  }\n\n  return {\n    innerValue,\n    hasMask,\n    moveCursorForPaste,\n    updateMaskValue,\n    onMaskedKeydown\n  }\n}\n","import { computed } from 'vue'\n\nexport default function (props, typeGuard) {\n  function getFormDomProps () {\n    const model = props.modelValue\n\n    try {\n      const dt = 'DataTransfer' in window\n        ? new DataTransfer()\n        : ('ClipboardEvent' in window\n            ? new ClipboardEvent('').clipboardData\n            : void 0\n          )\n\n      if (Object(model) === model) {\n        ('length' in model\n          ? Array.from(model)\n          : [ model ]\n        ).forEach(file => {\n          dt.items.add(file)\n        })\n      }\n\n      return {\n        files: dt.files\n      }\n    }\n    catch (e) {\n      return {\n        files: void 0\n      }\n    }\n  }\n\n  return typeGuard === true\n    ? computed(() => {\n      if (props.type !== 'file') {\n        return\n      }\n\n      return getFormDomProps()\n    })\n    : computed(getFormDomProps)\n}\n","import { h, ref, computed, watch, onBeforeUnmount, onMounted, nextTick, getCurrentInstance } from 'vue'\n\nimport useField, { useFieldState, useFieldProps, useFieldEmits, fieldValueIsFilled } from '../../composables/private/use-field.js'\nimport useMask, { useMaskProps } from './use-mask.js'\nimport { useFormProps, useFormInputNameAttr } from '../../composables/private/use-form.js'\nimport useFileFormDomProps from '../../composables/private/use-file-dom-props.js'\nimport useKeyComposition from '../../composables/private/use-key-composition.js'\n\nimport { createComponent } from '../../utils/private/create.js'\nimport { stop } from '../../utils/event.js'\nimport { addFocusFn } from '../../utils/private/focus-manager.js'\n\nexport default createComponent({\n  name: 'QInput',\n\n  inheritAttrs: false,\n\n  props: {\n    ...useFieldProps,\n    ...useMaskProps,\n    ...useFormProps,\n\n    modelValue: { required: false },\n\n    shadowText: String,\n\n    type: {\n      type: String,\n      default: 'text'\n    },\n\n    debounce: [ String, Number ],\n\n    autogrow: Boolean, // makes a textarea\n\n    inputClass: [ Array, String, Object ],\n    inputStyle: [ Array, String, Object ]\n  },\n\n  emits: [\n    ...useFieldEmits,\n    'paste', 'change'\n  ],\n\n  setup (props, { emit, attrs }) {\n    const temp = {}\n    let emitCachedValue = NaN, typedNumber, stopValueWatcher, emitTimer, emitValueFn\n\n    const inputRef = ref(null)\n    const nameProp = useFormInputNameAttr(props)\n\n    const {\n      innerValue,\n      hasMask,\n      moveCursorForPaste,\n      updateMaskValue,\n      onMaskedKeydown\n    } = useMask(props, emit, emitValue, inputRef)\n\n    const formDomProps = useFileFormDomProps(props, /* type guard */ true)\n    const hasValue = computed(() => fieldValueIsFilled(innerValue.value))\n\n    const onComposition = useKeyComposition(onInput)\n\n    const state = useFieldState()\n\n    const isTextarea = computed(() =>\n      props.type === 'textarea' || props.autogrow === true\n    )\n\n    const isTypeText = computed(() =>\n      isTextarea.value === true\n      || [ 'text', 'search', 'url', 'tel', 'password' ].includes(props.type)\n    )\n\n    const onEvents = computed(() => {\n      const evt = {\n        ...state.splitAttrs.listeners.value,\n        onInput,\n        onPaste,\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        onChange,\n        onBlur: onFinishEditing,\n        onFocus: stop\n      }\n\n      evt.onCompositionstart = evt.onCompositionupdate = evt.onCompositionend = onComposition\n\n      if (hasMask.value === true) {\n        evt.onKeydown = onMaskedKeydown\n      }\n\n      if (props.autogrow === true) {\n        evt.onAnimationend = adjustHeight\n      }\n\n      return evt\n    })\n\n    const inputAttrs = computed(() => {\n      const attrs = {\n        tabindex: 0,\n        'data-autofocus': props.autofocus === true || void 0,\n        rows: props.type === 'textarea' ? 6 : void 0,\n        'aria-label': props.label,\n        name: nameProp.value,\n        ...state.splitAttrs.attributes.value,\n        id: state.targetUid.value,\n        maxlength: props.maxlength,\n        disabled: props.disable === true,\n        readonly: props.readonly === true\n      }\n\n      if (isTextarea.value === false) {\n        attrs.type = props.type\n      }\n\n      if (props.autogrow === true) {\n        attrs.rows = 1\n      }\n\n      return attrs\n    })\n\n    // some browsers lose the native input value\n    // so we need to reattach it dynamically\n    // (like type=\"password\" <-> type=\"text\"; see #12078)\n    watch(() => props.type, () => {\n      if (inputRef.value) {\n        inputRef.value.value = props.modelValue\n      }\n    })\n\n    watch(() => props.modelValue, v => {\n      if (hasMask.value === true) {\n        if (stopValueWatcher === true) {\n          stopValueWatcher = false\n\n          if (String(v) === emitCachedValue) {\n            return\n          }\n        }\n\n        updateMaskValue(v)\n      }\n      else if (innerValue.value !== v) {\n        innerValue.value = v\n\n        if (\n          props.type === 'number'\n          && temp.hasOwnProperty('value') === true\n        ) {\n          if (typedNumber === true) {\n            typedNumber = false\n          }\n          else {\n            delete temp.value\n          }\n        }\n      }\n\n      // textarea only\n      props.autogrow === true && nextTick(adjustHeight)\n    })\n\n    watch(() => props.autogrow, val => {\n      // textarea only\n      if (val === true) {\n        nextTick(adjustHeight)\n      }\n      // if it has a number of rows set respect it\n      else if (inputRef.value !== null && attrs.rows > 0) {\n        inputRef.value.style.height = 'auto'\n      }\n    })\n\n    watch(() => props.dense, () => {\n      props.autogrow === true && nextTick(adjustHeight)\n    })\n\n    function focus () {\n      addFocusFn(() => {\n        const el = document.activeElement\n        if (\n          inputRef.value !== null\n          && inputRef.value !== el\n          && (el === null || el.id !== state.targetUid.value)\n        ) {\n          inputRef.value.focus({ preventScroll: true })\n        }\n      })\n    }\n\n    function select () {\n      inputRef.value !== null && inputRef.value.select()\n    }\n\n    function onPaste (e) {\n      if (hasMask.value === true && props.reverseFillMask !== true) {\n        const inp = e.target\n        moveCursorForPaste(inp, inp.selectionStart, inp.selectionEnd)\n      }\n\n      emit('paste', e)\n    }\n\n    function onInput (e) {\n      if (!e || !e.target || e.target.qComposing === true) {\n        return\n      }\n\n      if (props.type === 'file') {\n        emit('update:modelValue', e.target.files)\n        return\n      }\n\n      const val = e.target.value\n\n      if (hasMask.value === true) {\n        updateMaskValue(val, false, e.inputType)\n      }\n      else {\n        emitValue(val)\n\n        if (isTypeText.value === true && e.target === document.activeElement) {\n          const { selectionStart, selectionEnd } = e.target\n\n          if (selectionStart !== void 0 && selectionEnd !== void 0) {\n            nextTick(() => {\n              if (e.target === document.activeElement && val.indexOf(e.target.value) === 0) {\n                e.target.setSelectionRange(selectionStart, selectionEnd)\n              }\n            })\n          }\n        }\n      }\n\n      // we need to trigger it immediately too,\n      // to avoid \"flickering\"\n      props.autogrow === true && adjustHeight()\n    }\n\n    function emitValue (val, stopWatcher) {\n      emitValueFn = () => {\n        if (\n          props.type !== 'number'\n          && temp.hasOwnProperty('value') === true\n        ) {\n          delete temp.value\n        }\n\n        if (props.modelValue !== val && emitCachedValue !== val) {\n          emitCachedValue = val\n\n          stopWatcher === true && (stopValueWatcher = true)\n          emit('update:modelValue', val)\n\n          nextTick(() => {\n            emitCachedValue === val && (emitCachedValue = NaN)\n          })\n        }\n\n        emitValueFn = void 0\n      }\n\n      if (props.type === 'number') {\n        typedNumber = true\n        temp.value = val\n      }\n\n      if (props.debounce !== void 0) {\n        clearTimeout(emitTimer)\n        temp.value = val\n        emitTimer = setTimeout(emitValueFn, props.debounce)\n      }\n      else {\n        emitValueFn()\n      }\n    }\n\n    // textarea only\n    function adjustHeight () {\n      const inp = inputRef.value\n      if (inp !== null) {\n        const parentStyle = inp.parentNode.style\n        const { overflow } = inp.style\n\n        // reset height of textarea to a small size to detect the real height\n        // but keep the total control size the same\n        parentStyle.marginBottom = (inp.scrollHeight - 1) + 'px'\n        inp.style.height = '1px'\n        inp.style.overflow = 'hidden'\n\n        inp.style.height = inp.scrollHeight + 'px'\n        inp.style.overflow = overflow\n        parentStyle.marginBottom = ''\n      }\n    }\n\n    function onChange (e) {\n      onComposition(e)\n\n      clearTimeout(emitTimer)\n      emitValueFn !== void 0 && emitValueFn()\n\n      emit('change', e.target.value)\n    }\n\n    function onFinishEditing (e) {\n      e !== void 0 && stop(e)\n\n      clearTimeout(emitTimer)\n      emitValueFn !== void 0 && emitValueFn()\n\n      typedNumber = false\n      stopValueWatcher = false\n      delete temp.value\n\n      // we need to use setTimeout instead of this.$nextTick\n      // to avoid a bug where focusout is not emitted for type date/time/week/...\n      props.type !== 'file' && setTimeout(() => {\n        if (inputRef.value !== null) {\n          inputRef.value.value = innerValue.value !== void 0 ? innerValue.value : ''\n        }\n      })\n    }\n\n    function getCurValue () {\n      return temp.hasOwnProperty('value') === true\n        ? temp.value\n        : (innerValue.value !== void 0 ? innerValue.value : '')\n    }\n\n    onBeforeUnmount(() => {\n      onFinishEditing()\n    })\n\n    onMounted(() => {\n      // textarea only\n      props.autogrow === true && adjustHeight()\n    })\n\n    Object.assign(state, {\n      innerValue,\n\n      fieldClass: computed(() =>\n        `q-${ isTextarea.value === true ? 'textarea' : 'input' }`\n        + (props.autogrow === true ? ' q-textarea--autogrow' : '')\n      ),\n\n      hasShadow: computed(() =>\n        props.type !== 'file'\n        && typeof props.shadowText === 'string'\n        && props.shadowText.length > 0\n      ),\n\n      inputRef,\n\n      emitValue,\n\n      hasValue,\n\n      floatingLabel: computed(() =>\n        hasValue.value === true\n        || fieldValueIsFilled(props.displayValue)\n      ),\n\n      getControl: () => {\n        return h(isTextarea.value === true ? 'textarea' : 'input', {\n          ref: inputRef,\n          class: [\n            'q-field__native q-placeholder',\n            props.inputClass\n          ],\n          style: props.inputStyle,\n          ...inputAttrs.value,\n          ...onEvents.value,\n          ...(\n            props.type !== 'file'\n              ? { value: getCurValue() }\n              : formDomProps.value\n          )\n        })\n      },\n\n      getShadowControl: () => {\n        return h('div', {\n          class: 'q-field__native q-field__shadow absolute-bottom no-pointer-events'\n            + (isTextarea.value === true ? '' : ' text-no-wrap')\n        }, [\n          h('span', { class: 'invisible' }, getCurValue()),\n          h('span', props.shadowText)\n        ])\n      }\n    })\n\n    const renderFn = useField(state)\n\n    // expose public methods\n    const vm = getCurrentInstance()\n    Object.assign(vm.proxy, {\n      focus,\n      select,\n      getNativeElement: () => inputRef.value\n    })\n\n    return renderFn\n  }\n})\n"],"names":["NAMED_MASKS","date","datetime","time","fulltime","phone","card","TOKENS","pattern","negate","S","N","A","transform","v","toLocaleUpperCase","a","toLocaleLowerCase","X","x","KEYS","Object","keys","forEach","key","regex","RegExp","tokenRegexMask","join","escRegex","MARKER","String","fromCharCode","useMaskProps","mask","reverseFillMask","Boolean","fillMask","unmaskedValue","props","emit","emitValue","inputRef","maskMarked","maskReplaced","computedMask","computedUnmask","hasMask","ref","innerValue","getInitialMaskedValue","getIsTypeText","autogrow","includes","type","updateMaskInternals","value","masked","maskValue","unmaskValue","modelValue","fillWithMask","getPaddedMaskMarked","size","length","slice","pad","localMaskMarked","padPos","indexOf","i","localComputedMask","fillChar","fillCharEscaped","replace","unmask","extract","firstMatch","unmaskChar","negateChar","_","char1","esc","token","char2","c","push","unmaskMatcher","extractLast","extractMatcher","map","re","index","val","unmaskMatch","exec","extractMatch","extractMatcherLength","str","m","shift","split","updateMaskValue","rawVal","updateMaskInternalsFlag","inputType","inp","end","selectionEnd","endReverse","unmasked","preMasked","changed","document","activeElement","nextTick","cursor","Math","max","min","setSelectionRange","moveCursor","rightReverse","right","moveCursorForPaste","start","watch","left","selection","noMarkBefore","limit","leftReverse","onMaskedKeydown","e","shouldIgnoreKey","selectionStart","keyCode","fn","preventDefault","shiftKey","maskValueReverse","valIndex","output","maskIndex","valChar","maskDef","test","firstTokenIndex","typeGuard","getFormDomProps","model","dt","window","DataTransfer","ClipboardEvent","clipboardData","Array","from","file","items","add","files","computed","createComponent","name","inheritAttrs","useFieldProps","useFormProps","required","shadowText","default","debounce","Number","inputClass","inputStyle","emits","useFieldEmits","setup","attrs","temp","typedNumber","stopValueWatcher","emitTimer","emitValueFn","emitCachedValue","NaN","nameProp","useFormInputNameAttr","useMask","formDomProps","useFileFormDomProps","hasValue","fieldValueIsFilled","onComposition","useKeyComposition","onInput","state","useFieldState","isTextarea","isTypeText","onEvents","evt","splitAttrs","listeners","onPaste","onChange","onBlur","onFinishEditing","onFocus","stop","onCompositionstart","onCompositionupdate","onCompositionend","onKeydown","onAnimationend","adjustHeight","inputAttrs","tabindex","autofocus","rows","label","attributes","id","targetUid","maxlength","disabled","disable","readonly","focus","addFocusFn","el","preventScroll","select","target","qComposing","stopWatcher","hasOwnProperty","clearTimeout","setTimeout","parentStyle","parentNode","style","overflow","marginBottom","scrollHeight","height","getCurValue","dense","onBeforeUnmount","onMounted","assign","fieldClass","hasShadow","floatingLabel","displayValue","getControl","h","class","getShadowControl","renderFn","useField","vm","getCurrentInstance","proxy","getNativeElement"],"sourceRoot":""}